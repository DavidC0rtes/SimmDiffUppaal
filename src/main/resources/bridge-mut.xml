<?xml version="1.0" encoding="utf-8"?>
<!DOCTYPE nta PUBLIC '-//Uppaal Team//DTD Flat System 1.1//EN' 'http://www.it.uu.se/research/group/darts/uppaal/flat-1_2.dtd'>
<nta>
<declaration>chan take, release, tau;
int [0, 1] L;
clock time;
</declaration>
<template>
<name x="32" y="16">Soldier</name>
<parameter>const int delay</parameter>
<declaration>clock y;
</declaration>
<location id="id0" x="288" y="80">
<name x="278" y="46">anon</name>
</location>
<location id="id1" x="288" y="216">
<name x="272" y="232">safe</name>
</location>
<location id="id2" x="64" y="216">
<name x="54" y="182">anon2</name>
</location>
<location id="id3" x="64" y="80">
<name x="56" y="48">unsafe</name>
</location>
<location id="id4" x="-25" y="212">
<name x="-35" y="178">anon3</name>
</location>
<init ref="id3"/>
<transition>
<source ref="id4"/>
<target ref="id3"/>
<nail  x="-25" y="93"/>
</transition>
<transition>
<source ref="id2"/>
<target ref="id4"/>
</transition>
<transition>
<source ref="id2"/>
<target ref="id3"/>
<label kind="synchronisation" x="64" y="131">release!</label>
<label kind="guard" x="64" y="114">y&gt;=10</label>
</transition>
<transition>
<source ref="id1"/>
<target ref="id2"/>
<label kind="synchronisation" x="216" y="192">take!</label>
<label kind="guard" x="208" y="224">L==1</label>
<label kind="assignment" x="104" y="224">y=0</label>
</transition>
<transition>
<source ref="id0"/>
<target ref="id1"/>
<label kind="synchronisation" x="296" y="160">release!</label>
<label kind="guard" x="296" y="112">y&gt;=10</label>
</transition>
<transition>
<source ref="id3"/>
<target ref="id0"/>
<label kind="synchronisation" x="120" y="88">take!</label>
<label kind="guard" x="120" y="56">L==0</label>
<label kind="assignment" x="216" y="56">y=0</label>
</transition>
</template>
<template>
<name x="32" y="-16">Torch</name>
<location id="id5" x="200" y="192">
<name x="192" y="200">one</name>
</location>
<location id="id6" x="200" y="48">
<name x="190" y="14">anon</name>
<urgent/>
</location>
<location id="id7" x="64" y="120">
<name x="48" y="88">free</name>
</location>
<location id="id8" x="336" y="120">
<name x="328" y="88">two</name>
</location>
<init ref="id7"/>
<transition>
<source ref="id7"/>
<target ref="id6"/>
<label kind="synchronisation" x="104" y="56">take?</label>
</transition>
<transition>
<source ref="id6"/>
<target ref="id5"/>
</transition>
<transition>
<source ref="id6"/>
<target ref="id8"/>
<label kind="synchronisation" x="264" y="56">take?</label>
</transition>
<transition>
<source ref="id5"/>
<target ref="id7"/>
<label kind="synchronisation" x="96" y="176">release?</label>
<label kind="assignment" x="32" y="144">L=1-L</label>
</transition>
<transition>
<source ref="id8"/>
<target ref="id5"/>
<label kind="synchronisation" x="256" y="176">release?</label>
</transition>
</template>
<system>const int fastest = 5;
const int fast    = 10;
const int slow    = 20;
const int slowest = 25;

Viking1 = Soldier(fastest);
Viking2 = Soldier(fast);
Viking3 = Soldier(slow);
Viking4 = Soldier(slowest);

system Viking1, Viking2, Viking3, Viking4, Torch;</system>
<queries>
<query>
<formula>A[] not deadlock
			</formula>
<comment>The system is deadlock free.
			</comment>
</query>
<query>
<formula>E&lt;&gt; Viking1.safe
			</formula>
<comment>Viking 1 can cross the bridge.
			</comment>
</query>
<query>
<formula>E&lt;&gt; Viking2.safe
			</formula>
<comment>
			</comment>
</query>
<query>
<formula>E&lt;&gt; Viking3.safe
			</formula>
<comment>
			</comment>
</query>
<query>
<formula>A[] not (Viking4.safe and time&lt;slowest)
			</formula>
<comment>
			</comment>
</query>
<query>
<formula>E&lt;&gt; Viking4.safe imply time&gt;=slowest
			</formula>
<comment>
			</comment>
</query>
<query>
<formula>E&lt;&gt; Viking1.safe and Viking2.safe and Viking3.safe and Viking4.safe
			</formula>
<comment>Scheduling problem reformulated as reachability formula. Use
'Diagnostic Trace:Fastest' option to find fastest solution.
			</comment>
</query>
</queries>
</nta>